var documenterSearchIndex = {"docs":
[{"location":"parameters/conversions/#Parameter-Conversions","page":"Parameter Conversions","title":"Parameter Conversions","text":"","category":"section"},{"location":"parameters/conversions/","page":"Parameter Conversions","title":"Parameter Conversions","text":"This page is under construction, thank you for your patience.","category":"page"},{"location":"parameters/conversions/","page":"Parameter Conversions","title":"Parameter Conversions","text":"We provide helper functions to convert between various parameters commonly used to describe the observing conditions.","category":"page"},{"location":"parameters/conversions/#Helper-Functions","page":"Parameter Conversions","title":"Helper Functions","text":"","category":"section"},{"location":"parameters/conversions/","page":"Parameter Conversions","title":"Parameter Conversions","text":"Kolmogorov.Cn_squared_to_fried\nKolmogorov.fried_to_Cn_squared\nKolmogorov.fried_to_seeing\nKolmogorov.seeing_to_fried","category":"page"},{"location":"parameters/conversions/#Kolmogorov.Cn_squared_to_fried","page":"Parameter Conversions","title":"Kolmogorov.Cn_squared_to_fried","text":"Cn_squared_to_fried(Cn_squared::AbstractFloat,\n                    wavelength::AbstractFloat=500e-9)\n\nCalculates the Fried parameter (r_0) from a provided C_n^2 value and (optionally) wavelength in meters. If no wavelength is provided, the value assumed is 500 nm. The returned Fried parameter has units of meters.\n\n\n\n\n\n","category":"function"},{"location":"parameters/conversions/#Kolmogorov.fried_to_Cn_squared","page":"Parameter Conversions","title":"Kolmogorov.fried_to_Cn_squared","text":"fried_to_Cn_squared(r0::AbstractFloat,\n                    wavelength::AbstractFloat=500e-9)\n\nCalculates the integrated C_n^2 value that yields the provided Fried parameter (r_0). If wavelength is not provided, the value assumed is 500 nm. The returned C_n^2 has units of mathrmm^-23.\n\n\n\n\n\n","category":"function"},{"location":"parameters/conversions/#Kolmogorov.fried_to_seeing","page":"Parameter Conversions","title":"Kolmogorov.fried_to_seeing","text":"fried_to_seeing(r0::AbstractFloat,\n                wavelength::AbstractFloat=500e-9)\n\nCalculates the resulting seeing from a given Fried parameter (r_0) and (optionally) wavelength, both in meters. If no wavelength is provided, the value assumed is 500 nm. The returned seeing is in arcseconds.\n\n\n\n\n\n","category":"function"},{"location":"parameters/conversions/#Kolmogorov.seeing_to_fried","page":"Parameter Conversions","title":"Kolmogorov.seeing_to_fried","text":"seeing_to_fried(seeing::AbstractFloat,\n                wavelength::AbstractFloat=500e-9)\n\nCalculates the Fried parameter (r_0) that yields the provided seeing, seeing must be in arcseconds. If no wavelength is provided, the value assumed is 500 nm. The returned Fried parameter is in units of meters.\n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = Kolmogorov\nDocTestSetup = :(using Kolmogorov)","category":"page"},{"location":"#Kolmogorov.jl","page":"Home","title":"Kolmogorov.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: GitHub) (Image: Build status) (Image: Coverage)","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This page is a work in progress, apologies","category":"page"},{"location":"#Getting-Started","page":"Home","title":"Getting Started","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This page is a work in progress, apologies","category":"page"},{"location":"#Contributing","page":"Home","title":"Contributing","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This page is a work in progress, apologies","category":"page"},{"location":"#License","page":"Home","title":"License","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The work included here is covered by the MIT License","category":"page"},{"location":"stats/standardones/#Standard-Atmospheric-Statistics","page":"Kolmogorov","title":"Standard Atmospheric Statistics","text":"","category":"section"},{"location":"stats/standardones/","page":"Kolmogorov","title":"Kolmogorov","text":"Here we go through the standard set of atmosphere statistics which are commonly used in adaptive optics simulations.","category":"page"},{"location":"stats/standardones/#Kolmogorov","page":"Kolmogorov","title":"Kolmogorov","text":"","category":"section"},{"location":"stats/standardones/","page":"Kolmogorov","title":"Kolmogorov","text":"This page is under construction, thank you for your patience.","category":"page"},{"location":"stats/standardones/","page":"Kolmogorov","title":"Kolmogorov","text":"Kolmogorov.kolmogorovfilter","category":"page"},{"location":"stats/standardones/#Kolmogorov.kolmogorovfilter","page":"Kolmogorov","title":"Kolmogorov.kolmogorovfilter","text":"kolmogorovfilter(frequencies::AbstractVector{AbstractFloat},\n                 Cn_squared::AbstractFloat,\n                 deltafreq::AbstractFloat)\n\nA filter for generating a Kolmogorov turbulence phase screen. Uses the idea of Johansson and Gavel (1994), which is to create a \"Gaussian white noise process\" and apply a filter that shapes the noise to have a particular structure function. After this shaping the inverse FFT produces a matrix which contains the turbulent phase screen with the proper statistics, in this case Kolmogorov. Specifically, the output of the inverse FFT will be a random field which has the following spatial power spectral density:\n\nPhi_nleft(veckright) = 0033  C_n^2  veck^-113\n\nwhere veck = 2pileft(f_x  hati + f_y  hatjright) is the angular spatial frequency in radians/meter\n\n\n\n\n\n","category":"function"}]
}
